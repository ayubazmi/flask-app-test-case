name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      id: pytest
      run: |
        pytest || exit 1

    - name: Display test result
      if: ${{ steps.pytest.outcome == 'success' }}
      run: |
        echo "Test cases passed!"
      
    - name: Deploy to Heroku
      if: ${{ steps.pytest.outcome == 'success' }}
      run: |
        # Log in to Heroku CLI using the API key
        echo "$HEROKU_API_KEY" | heroku login -i || exit 1
        # Check if login was successful
        heroku auth:whoami || exit 1
        # Create a new Heroku app
        heroku create
        # Deploy the code to Heroku
        git push heroku main
